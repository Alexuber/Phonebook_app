{"version":3,"file":"static/js/765.4d57f387.chunk.js","mappings":"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","sources":["../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : EMPTY_THEME,\n    children: props.children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport phonebook from 'assets/phonebook.jpg';\nimport { registerUser } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link\n        color=\"inherit\"\n        href=\"http://localhost:3000/goit-react-hw-08-phonebook\"\n      >\n        Phonebook\n      </Link>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignInPage() {\n  const dispatch = useDispatch();\n  const [empty, setEmpty] = useState({ email: false, password: false });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    if (user.name === '') {\n      setEmpty(prev => ({ ...prev, name: true }));\n      return;\n    }\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n    if (user.password === '') {\n      setEmpty(prev => ({ ...prev, password: true }));\n      return;\n    }\n    if (!validate(user)) {\n      return;\n    }\n    dispatch(registerUser(user));\n  };\n\n  const validate = data => {\n    if (\n      !/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(\n        data.email\n      )\n    ) {\n      toast.error(`Invalid email format!`, {\n        position: 'bottom-right',\n        autoClose: 3000,\n      });\n      return false;\n    }\n    if (\n      !/^[a-zA-ZÐ°-ÑÐ-Ð¯ÑÐ'][a-zA-Z-Ð°-ÑÐ-Ð¯ÑÐ' ]+[a-zA-ZÐ°-ÑÐ-Ð¯ÑÐ']?$/.test(\n        data.name\n      )\n    ) {\n      return toast.error(`Invalid name format!`, {\n        position: 'bottom-right',\n        autoClose: 3000,\n      });\n    }\n    return true;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '93.2vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: `url(\"${phonebook}\")`,\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"name\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Full Name\"\n                    autoFocus\n                    error={empty.name}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    error={empty.email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    error={empty.password}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                    }\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                sx={{\n                  mt: 3,\n                  mb: 2,\n                  display: 'block',\n                  marginLeft: 'auto',\n                  marginRight: 'auto',\n                  '&:disabled': {\n                    backgroundColor: 'rgb(25 118 210 / 49%)',\n                    color: 'white',\n                  },\n                }}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Link href=\"login\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n              <Copyright sx={{ mt: 5 }} style={{ marginTop: '250px' }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n"],"names":["Symbol","for","props","children","localTheme","theme","outerTheme","useTheme","React","output","_extends","mergeOuterLocalTheme","nested","_jsx","ThemeContext","value","EMPTY_THEME","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","createTheme","SignInPage","dispatch","useDispatch","useState","email","password","empty","setEmpty","validate","data","test","name","toast","position","autoClose","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","phonebook","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","event","preventDefault","FormData","currentTarget","user","get","registerUser","prev","mt","spacing","TextField","autoComplete","required","fullWidth","id","label","autoFocus","error","type","FormControlLabel","control","Checkbox","Button","mb","marginLeft","marginRight","justifyContent","style","marginTop"],"sourceRoot":""}