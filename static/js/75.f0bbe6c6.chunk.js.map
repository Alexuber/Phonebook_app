{"version":3,"file":"static/js/75.f0bbe6c6.chunk.js","mappings":"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","sources":["pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport phonebook from 'assets/phonebook3.jpg';\nimport { useDispatch } from 'react-redux';\nimport { signInUser } from 'redux/auth/auth-operations';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link\n        color=\"inherit\"\n        href=\"http://localhost:3000/goit-react-hw-08-phonebook\"\n      >\n        Phonebook\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function SignInPage() {\n  const [empty, setEmpty] = useState({ email: false, password: false });\n\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const loginData = {\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    if (loginData.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n    if (loginData.password === '') {\n      setEmpty(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    if (!validate(loginData)) {\n      return;\n    }\n    dispatch(signInUser(loginData));\n  };\n\n  const validate = data => {\n    if (\n      !/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(\n        data.email\n      )\n    ) {\n      toast.error(`Invalid email format!`, {\n        position: 'bottom-right',\n        autoClose: 3000,\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <Grid container component=\"main\" sx={{ height: '93.2vh' }}>\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: `url(\"${phonebook}\")`,\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t =>\n            t.palette.mode === 'light'\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              error={empty.email}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              error={empty.password}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{\n                mt: 3,\n                mb: 2,\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                '&:disabled': {\n                  backgroundColor: 'rgb(25 118 210 / 49%)',\n                  color: 'white',\n                },\n              }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ mt: 5 }} style={{ marginTop: '330px' }} />\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","SignInPage","useState","email","password","empty","setEmpty","dispatch","useDispatch","validate","data","test","toast","position","autoClose","container","component","sx","height","item","xs","sm","md","backgroundImage","phonebook","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","event","preventDefault","FormData","currentTarget","loginData","get","signInUser","prev","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","error","type","control","value","mb","marginLeft","marginRight","style","marginTop"],"sourceRoot":""}